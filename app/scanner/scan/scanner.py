import datetime
import json
import re
import os, sys
import itertools
import requests


class ConfigSender(object):

    def __init__(self, config, urls):
        self.config = config
        self.urls = urls

    def loader(self):
        self.yamls = []
        flst = os.listdir()
        for fl  in flst:
            if fl.endswith(".yaml" or ".yml"):
                with open(fl, "r") as ist:
                    self.yamls.append(ist)
        self.urls = []
        with open(self.urls, "r") as uri:
            for line in uri.strip("\n"):
                self.urls.append(line)


class Loader(object):
	def __init__(self, urls, config):
		self.urls = urls
		self.config = config

	def configReader(self):
		with open(self.config, "r") as confs:
			data = yaml.load(confs)
		self.method = data["requests"]["method"]
		self.path = data["requests"]["path"]
		self.condition = data["requests"]["matchers-condition"]
		self.status = data["requests"][0]["matchers"][-1]["status"][0]
		self.matchers = data["requests"][0]["matchers"]
		for type_ in matchers:
			if type_["type"] == "status":
				self.status = type_["status"][0]
			elif type_["type"] == "word" and  type_["type"] == "header":
				self.word_h = type_["words"][0]
			elif type_["type"] == "word" and type_["type"] == "body":
				self.word_b = type_["words"][0]
			elif type_["type"] == "regex" and type_["part"] == "header":
				self.re_header = type_["regex"][0]
			elif type_["type"] == "regex" and type_["part"] == "body":
				self.re_body = type_["regex"][0]
			else:
				pass
	def requester(self):
		self.lists = []
		self.timeout = 5
		self.params =  None
		self.data = None
		with open(self.urls, "r") as urls:
			for url in urls.split("\n"):
				self.lists.append(url)
		for url in self.lists:
			url = url+self.path
			if self.method ==  'GET':
				self.res = request.get(url,params=self.params,allow_redirects=True,timeout=self.timeout,verify=False)
			elif self.method == 'PUT':
				self.res = request.put(url,data=self.data,allow_redirects=True,timeout=self.timeout,verify=False)
			elif self.method == 'POST':
				self.res = request.post(url,data=self.data, allow_redirects=True,timeout=self.timeout,verify=False)
			else:
				pass

	def responser(self):
		if not self.regex:
			if self.condition == "and":
				if self.res.status_code==self.status and self.word_b and self.word_h in self.res:
				return self.res.url
			elif self.condition == "or":
				if self.status and self.word_b or self.word_h in self.res:
					return self.res.url
			else:
				pass
		elif self.regex:
			if self.condition == "and":
				if re.match(self.regex) and self.res.status_code == self.status:
					return self.res.url
				else:
					pass
			if self.condition == "or":
				if re.match(self.regex) and self.res.status_code == self.status:
					return self.res.ur


import os, json, re
from flask import Flask, redirect, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import JSON
#: from flask_restful import Resource, Api
from  scanner import Solver
from holds import bugs
from serialize import Serializer

app =  Flask(__name__)
db = SQLAlchemy(app)


basedir = os.path.abspath(os.path.dirname(__file__))

print(basedir, end="\n\n")
app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///" + os.path.join(basedir, "tests.db")
#: app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///" + os.path.join(basedir, "testing_app.db")

app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False

class Tests(db.Model):
    __tablename__ = "tests"
    id = db.Column(db.Integer, primary_key=True)
    subdomain = db.Column(JSON, nullable=False)
    #: url = db.Column(db.String, nullable=False)

    def __repr__(self):
        return self.subdomain
    def serialize(self):
        data = Serializer.serialize(self)
        return {"data": data}


db.create_all()
configs = "/home/0cx/Documents/school/42/project2/templates/"
urls = "/home/0cx/Documents/school/42/project2/output/urls.txt"

@app.route("/", methods=["GET", "POST"])
def scanner():
    print(bugs)
    solver = Solver(urls, configs)
    solver.open_urls()
    solver.load_configs()
    solver.requester()
    for bug in bugs:
        info = Tests(subdomain=bug)
        db.session.add(info)
        db.session.commit()
    return  jsonify("success!"), 200

@app.route("/res", methods=["GET", "POST"])
def res():
    tests = Tests.query.all()
    data = Serializer.serialize_list(tests)
    #: data = data["data"]
    print(data)
    return data


if __name__ == "__main__":
    app.run(debug=True, port=5555)
